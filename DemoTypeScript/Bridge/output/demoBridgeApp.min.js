"use strict";Bridge.define("DemoBridgeApp.App.Plant",{config:{properties:{Common:null,Light:null,Indoor:!1}}});Bridge.define("DemoBridgeApp.App.Plants",{statics:{getFlowers:function(){return Bridge.merge(new Bridge.List$1(DemoBridgeApp.App.Plant)(),[[Bridge.merge(new DemoBridgeApp.App.Plant,{setCommon:"Anemone",setLight:"Shade",setIndoor:!0})],[Bridge.merge(new DemoBridgeApp.App.Plant,{setCommon:"Columbine",setLight:"Shade",setIndoor:!0})],[Bridge.merge(new DemoBridgeApp.App.Plant,{setCommon:"Marsh Marigold",setLight:"Sunny",setIndoor:!1})],[Bridge.merge(new DemoBridgeApp.App.Plant,{setCommon:"Gential",setLight:"Sun or Shade",setIndoor:!1})],[Bridge.merge(new DemoBridgeApp.App.Plant,{setCommon:"Woodland",setLight:"Sun or Shade",setIndoor:!1})]])}}});Bridge.define("DemoBridgeApp.App",{statics:{config:{init:function(){Bridge.ready(this.main)}},main:function(){for(var t,i,o=Bridge.Linq.Enumerable.from(["Daniil","Fabricio","Geoffrey","Leonid","Ozgur"]).where(function(n){return Bridge.String.contains(n,"i")}).orderBy(function(n){return n}).select(function(n){return n.toUpperCase()}),u,f,r,e,n=Bridge.getEnumerator(o);n.moveNext();)u=n.getCurrent(),Bridge.get(console).log(u);for(f=Bridge.Linq.Enumerable.from(Bridge.get(DemoBridgeApp.App.Plants).getFlowers()).groupBy(function(n){return n.getLight()}),t=Bridge.getEnumerator(f);t.moveNext();)for(r=t.getCurrent(),Bridge.get(console).log("Light: "+r.key()),i=Bridge.getEnumerator(r);i.moveNext();)e=i.getCurrent(),Bridge.get(console).log("    - "+e.getCommon())}}});Bridge.init();